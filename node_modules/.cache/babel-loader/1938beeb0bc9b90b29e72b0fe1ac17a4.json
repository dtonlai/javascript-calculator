{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dtl/Documents/GitHub/javascript-calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //State\n\n    this.state = {\n      smallDisplay: '',\n      mainDisplay: '0'\n    };\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.clearMainDisplay = this.clearMainDisplay.bind(this);\n    this.clearDisplays = this.clearDisplays.bind(this);\n    this.inputZero = this.inputZero.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n    this.inputOperator = this.inputOperator.bind(this);\n    this.inputDecimal = this.inputDecimal.bind(this);\n    this.equals = this.equals.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress(event) {\n    console.log(event.keyCode);\n    console.log(String.fromCharCode(event.keyCode));\n  } //Clear main display \n\n\n  clearMainDisplay() {\n    this.setState({\n      mainDisplay: ''\n    });\n  } //Clears both displays\n\n\n  clearDisplays() {\n    this.setState({\n      smallDisplay: '',\n      mainDisplay: '0',\n      answer: ''\n    });\n  } //Function to input zeros\n\n\n  inputZero() {\n    let zeroStartRegex = /^[0]/;\n    let zeroDecimalStartRegex = /^(0.)/; //If mainDisplay already starts with zero, and does not start with '0.', input zero\n\n    if (zeroStartRegex.test(this.state.mainDisplay) && !zeroDecimalStartRegex.test(this.state.mainDisplay)) {\n      return;\n    } else {\n      switch (this.state.mainDisplay) {\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          this.clearMainDisplay();\n          this.setState({\n            smallDisplay: this.state.smallDisplay + this.state.mainDisplay + '0',\n            mainDisplay: '0'\n          });\n          break;\n\n        default:\n          this.setState({\n            smallDisplay: this.state.smallDisplay + '0',\n            mainDisplay: this.state.mainDisplay + '0'\n          });\n          break;\n      }\n    }\n  } //Function to input numbers\n\n\n  inputNumber() {\n    let numberValue = document.getElementById(Event.trigger.id).value; //If mainDisplay is showing 0 or operator, clear it and then continue inputting numbers\n\n    switch (this.state.mainDisplay) {\n      case '0':\n        this.clearMainDisplay();\n        this.setState({\n          mainDisplay: numberValue,\n          smallDisplay: this.state.smallDisplay.slice(0, -1) + numberValue\n        });\n        break;\n\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n        this.clearMainDisplay();\n        this.setState({\n          mainDisplay: numberValue,\n          smallDisplay: this.state.smallDisplay + this.state.mainDisplay + numberValue\n        });\n        break;\n\n      default:\n        this.setState({\n          mainDisplay: this.state.mainDisplay + numberValue,\n          smallDisplay: this.state.smallDisplay + numberValue\n        });\n        break;\n    }\n  } //Method to input decimals\n\n\n  inputDecimal() {\n    let decimalRegex = /[.]/g; //If mainDisplay does not already have a decimal, input one\n\n    if (!decimalRegex.test(this.state.mainDisplay)) {\n      switch (this.state.mainDisplay) {\n        //If mainDisplay is only zero, add '.'\n        case '0':\n          this.setState({\n            mainDisplay: this.state.mainDisplay + '.',\n            smallDisplay: this.state.smallDisplay.slice(0, -1) + '0' + '.'\n          });\n          break;\n        //If mainDisplay is showing operator, add '0.' to start decimal\n\n        case '':\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          this.clearMainDisplay();\n          this.setState({\n            smallDisplay: this.state.smallDisplay + this.state.mainDisplay + '0.',\n            mainDisplay: '0.'\n          });\n          break;\n\n        default:\n          console.log(this.state.mainDisplay);\n          this.setState({\n            smallDisplay: this.state.smallDisplay + '.',\n            mainDisplay: this.state.mainDisplay + '.'\n          });\n          break;\n      }\n    }\n  } //Method to input operators, allows to change operator until a number is inputted next\n\n  /*\n  inputOperator() {\n    let operatorValue = document.getElementById(event.srcElement.id).value;\n    this.clearMainDisplay();\n    if (!operators.includes(this.state.mainDisplay)) {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    } else {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    }\n  };\n  */\n\n\n  inputOperator() {\n    let operatorValue = document.getElementById(Event.trigger.id).value;\n    this.clearMainDisplay();\n\n    if (this.state.answer != '' && this.state.smallDisplay == '') {\n      this.setState({\n        smallDisplay: this.state.answer + operatorValue\n      });\n    } else if (!operators.includes(this.state.mainDisplay)) {\n      this.setState({\n        mainDisplay: operatorValue\n      });\n    } else {\n      this.setState({\n        mainDisplay: operatorValue\n      });\n    }\n  }\n\n  //Method to solve equation when 'equals' is pressed \n\n  /*\n  equals(numbersArray, operatorsArray) {\n    function operate(operator) {\n      switch(firstNum = 0, secondNum = 0, operator) {\n        case '+':\n          return firstNum + secondNum;\n          break;\n        case '-':\n          return firstNum - secondNum;\n          break;\n      }\n    }\n    return;\n  }\n  */\n  equals() {\n    let answer = eval(this.state.smallDisplay);\n    this.setState({\n      smallDisplay: '',\n      mainDisplay: answer,\n      answer: answer\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"calculator\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"small-display\",\n          style: {\n            gridArea: 'small-display'\n          },\n          value: this.state.smallDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"main-display\",\n          style: {\n            gridArea: 'display'\n          },\n          value: this.state.mainDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"clear\",\n          style: {\n            gridArea: 'clear'\n          },\n          onClick: this.clearDisplays,\n          children: \"AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"divide\",\n          style: {\n            gridArea: 'divide'\n          },\n          onClick: this.inputOperator,\n          value: \"/\",\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"multiply\",\n          style: {\n            gridArea: 'multiply'\n          },\n          onClick: this.inputOperator,\n          value: \"*\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"seven\",\n          style: {\n            gridArea: 'seven'\n          },\n          onClick: this.inputNumber,\n          value: \"7\",\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"eight\",\n          style: {\n            gridArea: 'eight'\n          },\n          onClick: this.inputNumber,\n          value: \"8\",\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"nine\",\n          style: {\n            gridArea: 'nine'\n          },\n          onClick: this.inputNumber,\n          value: \"9\",\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"minus\",\n          style: {\n            gridArea: 'minus'\n          },\n          onClick: this.inputOperator,\n          value: \"-\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"four\",\n          style: {\n            gridArea: 'four'\n          },\n          onClick: this.inputNumber,\n          value: \"4\",\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"five\",\n          style: {\n            gridArea: 'five'\n          },\n          onClick: this.inputNumber,\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"six\",\n          style: {\n            gridArea: 'six'\n          },\n          onClick: this.inputNumber,\n          value: \"6\",\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"plus\",\n          style: {\n            gridArea: 'plus'\n          },\n          onClick: this.inputOperator,\n          value: \"+\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"one\",\n          style: {\n            gridArea: 'one'\n          },\n          onClick: this.inputNumber,\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"two\",\n          style: {\n            gridArea: 'two'\n          },\n          onClick: this.inputNumber,\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"three\",\n          style: {\n            gridArea: 'three'\n          },\n          onClick: this.inputNumber,\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"zero\",\n          style: {\n            gridArea: 'zero'\n          },\n          onClick: this.inputZero,\n          value: \"0\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"decimal\",\n          style: {\n            gridArea: 'decimal'\n          },\n          onClick: this.inputDecimal,\n          value: \".\",\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"equals\",\n          style: {\n            gridArea: 'equals'\n          },\n          onClick: this.equals,\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst operators = ['+', '-', '*', '/'];\nconst calculatorKeys = [{\n  keyCode: 12,\n  keyTrigger: 'clear',\n  gridArea: 'clear'\n}, {\n  keyCode: 111,\n  keyTrigger: 'divide',\n  gridArea: 'divide'\n}, {\n  keyCode: 106,\n  keyTrigger: 'multiply',\n  gridArea: 'multiply'\n}, {\n  keyCode: 55,\n  keyTrigger: 'seven',\n  gridArea: 'seven'\n}, {\n  keyCode: 56,\n  keyTrigger: 'eight',\n  gridArea: 'eight'\n}, {\n  keyCode: 57,\n  keyTrigger: 'nine',\n  gridArea: 'nine'\n}, {\n  keyCode: 109,\n  keyTrigger: 'minus',\n  gridArea: 'multiply'\n}, {\n  keyCode: 52,\n  keyTrigger: 'four',\n  gridArea: 'four'\n}, {\n  keyCode: 53,\n  keyTrigger: 'five',\n  gridArea: 'five'\n}, {\n  keyCode: 54,\n  keyTrigger: 'six',\n  gridArea: 'six'\n}, {\n  keyCode: 107,\n  keyTrigger: 'plus',\n  gridArea: 'plus'\n}, {\n  keyCode: 49,\n  keyTrigger: 'one',\n  gridArea: 'one'\n}, {\n  keyCode: 50,\n  keyTrigger: 'two',\n  gridArea: 'two'\n}, {\n  keyCode: 51,\n  keyTrigger: 'three',\n  gridArea: 'three'\n}, {\n  keyCode: 48,\n  keyTrigger: 'zero',\n  gridArea: 'zero'\n}, {\n  keyCode: 110,\n  keyTrigger: 'decimal',\n  gridArea: 'decimal'\n}, {\n  keyCode: 13,\n  keyTrigger: 'equals',\n  gridArea: 'equals'\n}];\nconsole.log('Project complete for now');\nconsole.log('Nice to add - keyboard integration, better styling, hitting empty equals returns undefined - should fix');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 348,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/dtl/Documents/GitHub/javascript-calculator/src/index.js"],"names":["React","ReactDOM","reportWebVitals","App","Component","constructor","props","state","smallDisplay","mainDisplay","handleKeyPress","bind","clearMainDisplay","clearDisplays","inputZero","inputNumber","inputOperator","inputDecimal","equals","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","console","log","keyCode","String","fromCharCode","setState","answer","zeroStartRegex","zeroDecimalStartRegex","test","numberValue","getElementById","Event","trigger","id","value","slice","decimalRegex","operatorValue","operators","includes","eval","render","gridArea","calculatorKeys","keyTrigger"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //State\n    this.state = {\n      smallDisplay: '',\n      mainDisplay: '0'\n    }\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.clearMainDisplay = this.clearMainDisplay.bind(this);\n    this.clearDisplays = this.clearDisplays.bind(this);\n    this.inputZero = this.inputZero.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n    this.inputOperator = this.inputOperator.bind(this);\n    this.inputDecimal = this.inputDecimal.bind(this);\n    this.equals = this.equals.bind(this);\n  }\n  \n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  \n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n  \n  handleKeyPress(event) {\n    console.log(event.keyCode);\n    console.log(String.fromCharCode(event.keyCode));\n  }\n  \n  //Clear main display \n  clearMainDisplay(){\n    this.setState({\n      mainDisplay: ''\n    })  \n  }\n  \n  //Clears both displays\n  clearDisplays() {\n    this.setState({\n      smallDisplay: '',\n      mainDisplay: '0',\n      answer: ''\n    })\n  }\n  \n  //Function to input zeros\n  inputZero() {\n    let zeroStartRegex = /^[0]/;\n    let zeroDecimalStartRegex = /^(0.)/;\n    //If mainDisplay already starts with zero, and does not start with '0.', input zero\n    if (zeroStartRegex.test(this.state.mainDisplay) && !zeroDecimalStartRegex.test(this.state.mainDisplay)) {\n      return;\n    } else {\n      switch(this.state.mainDisplay) {\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          this.clearMainDisplay();\n          this.setState({\n            smallDisplay: this.state.smallDisplay + this.state.mainDisplay + '0',\n            mainDisplay: '0'\n          });\n          break;\n        default:\n           this.setState({\n            smallDisplay: this.state.smallDisplay + '0',\n            mainDisplay: this.state.mainDisplay + '0'\n          });\n          break;\n        }\n      }\n    }\n  \n  //Function to input numbers\n  inputNumber() {\n    let numberValue = document.getElementById(Event.trigger.id).value;\n    //If mainDisplay is showing 0 or operator, clear it and then continue inputting numbers\n    switch(this.state.mainDisplay) {\n      case '0':\n        this.clearMainDisplay();\n        this.setState({\n          mainDisplay: numberValue,\n          smallDisplay: this.state.smallDisplay.slice(0, -1) + numberValue\n        })\n        break;\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n        this.clearMainDisplay();\n        this.setState({\n          mainDisplay: numberValue,\n          smallDisplay: this.state.smallDisplay + this.state.mainDisplay + numberValue\n        });\n        break;\n      default:\n        this.setState({\n          mainDisplay: this.state.mainDisplay + numberValue,\n          smallDisplay: this.state.smallDisplay + numberValue\n        })\n        break;\n      }\n    }\n  \n  //Method to input decimals\n  inputDecimal() {\n    let decimalRegex = /[.]/g;\n    //If mainDisplay does not already have a decimal, input one\n    if (!decimalRegex.test(this.state.mainDisplay)) {\n      switch(this.state.mainDisplay) {\n        //If mainDisplay is only zero, add '.'\n        case '0':\n          this.setState({\n            mainDisplay: this.state.mainDisplay + '.',\n            smallDisplay: this.state.smallDisplay.slice(0, -1) + '0' + '.'\n          });\n          break;\n        //If mainDisplay is showing operator, add '0.' to start decimal\n        case '':\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          this.clearMainDisplay();\n          this.setState({\n            smallDisplay: this.state.smallDisplay + this.state.mainDisplay + '0.',\n            mainDisplay: '0.'\n          })\n          break;\n        default:\n          console.log(this.state.mainDisplay);\n          this.setState({\n            smallDisplay: this.state.smallDisplay + '.',\n            mainDisplay: this.state.mainDisplay + '.'\n          });\n          break;\n        }\n      }\n    }\n  \n  //Method to input operators, allows to change operator until a number is inputted next\n  /*\n  inputOperator() {\n    let operatorValue = document.getElementById(event.srcElement.id).value;\n    this.clearMainDisplay();\n    if (!operators.includes(this.state.mainDisplay)) {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    } else {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    }\n  };\n  */\n  \n  inputOperator() {\n    let operatorValue = document.getElementById(Event.trigger.id).value;\n    this.clearMainDisplay();\n    \n    if (this.state.answer != '' && this.state.smallDisplay == '') {\n      this.setState({\n        smallDisplay: this.state.answer + operatorValue\n      })      \n    } else if (!operators.includes(this.state.mainDisplay)) {\n      \n      this.setState({\n        mainDisplay: operatorValue\n      })\n    } else {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    }\n  };\n  \n  //Method to solve equation when 'equals' is pressed \n  /*\n  equals(numbersArray, operatorsArray) {\n    function operate(operator) {\n      switch(firstNum = 0, secondNum = 0, operator) {\n        case '+':\n          return firstNum + secondNum;\n          break;\n        case '-':\n          return firstNum - secondNum;\n          break;\n      }\n    }\n    return;\n  }\n  */\n  \n  equals() {\n    let answer = eval(this.state.smallDisplay);    \n    this.setState({\n      smallDisplay: '',\n      mainDisplay: answer,\n      answer: answer\n    });\n  }\n  \n  render() {\n    return(\n      <div class='container'>\n        \n        <div id='calculator'>\n          \n          <input id='small-display' style={{gridArea: 'small-display'}} value={this.state.smallDisplay}/>\n          <input id='main-display' style={{gridArea: 'display'}} value={this.state.mainDisplay} />\n          <button id='clear' style={{gridArea: 'clear'}} onClick={this.clearDisplays}>AC</button>\n          <button id='divide' style={{gridArea: 'divide'}} onClick={this.inputOperator} value='/'>/</button>\n          <button id='multiply' style={{gridArea: 'multiply'}} onClick={this.inputOperator} value='*'>X</button>\n          <button id='seven' style={{gridArea: 'seven'}} onClick={this.inputNumber} value='7'>7</button>\n          <button id='eight' style={{gridArea: 'eight'}} onClick={this.inputNumber} value='8'>8</button>\n          <button id='nine' style={{gridArea: 'nine'}} onClick={this.inputNumber} value='9'>9</button>\n          <button id='minus' style={{gridArea: 'minus'}} onClick={this.inputOperator} value='-'>-</button>\n          <button id='four' style={{gridArea: 'four'}} onClick={this.inputNumber} value='4'>4</button>\n          <button id='five' style={{gridArea: 'five'}} onClick={this.inputNumber} value='5'>5</button>\n          <button id='six' style={{gridArea: 'six'}} onClick={this.inputNumber} value='6'>6</button>\n          <button id='plus' style={{gridArea: 'plus'}} onClick={this.inputOperator} value='+'>+</button>\n          <button id='one' style={{gridArea: 'one'}} onClick={this.inputNumber} value='1'>1</button>\n          <button id='two' style={{gridArea: 'two'}} onClick={this.inputNumber} value='2'>2</button>\n          <button id='three' style={{gridArea: 'three'}} onClick={this.inputNumber} value='3'>3</button>\n          <button id='zero' style={{gridArea: 'zero'}} onClick={this.inputZero} value='0'>0</button>\n          <button id='decimal' style={{gridArea: 'decimal'}} onClick={this.inputDecimal} value='.'>.</button>\n          <button id='equals' style={{gridArea: 'equals'}} onClick={this.equals}>=</button>\n\n\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nconst operators = [\n  '+', '-', '*', '/'\n]\n\nconst calculatorKeys = [\n  {\n    keyCode: 12,\n    keyTrigger: 'clear',\n    gridArea: 'clear'\n  },\n  {\n    keyCode: 111,\n    keyTrigger: 'divide',\n    gridArea: 'divide'\n  },\n  {\n    keyCode: 106,\n    keyTrigger: 'multiply',\n    gridArea: 'multiply'\n  },\n  {\n    keyCode: 55,\n    keyTrigger: 'seven',\n    gridArea: 'seven'\n  },\n  {\n    keyCode: 56,\n    keyTrigger: 'eight',\n    gridArea: 'eight'\n  },\n  {\n    keyCode: 57,\n    keyTrigger: 'nine',\n    gridArea: 'nine'\n  },\n  {\n    keyCode: 109,\n    keyTrigger: 'minus',\n    gridArea: 'multiply'\n  },\n  {\n    keyCode: 52,\n    keyTrigger: 'four',\n    gridArea: 'four'\n  },\n  {\n    keyCode: 53,\n    keyTrigger: 'five',\n    gridArea: 'five'\n  },\n  {\n    keyCode: 54,\n    keyTrigger: 'six',\n    gridArea: 'six'\n  },\n  {\n    keyCode: 107,\n    keyTrigger: 'plus',\n    gridArea: 'plus'\n  },\n  {\n    keyCode: 49,\n    keyTrigger: 'one',\n    gridArea: 'one'\n  },\n  {\n    keyCode: 50,\n    keyTrigger: 'two',\n    gridArea: 'two'\n  },\n  {\n    keyCode: 51,\n    keyTrigger: 'three',\n    gridArea: 'three'\n  },\n  {\n    keyCode: 48,\n    keyTrigger: 'zero',\n    gridArea: 'zero',\n  },\n  {\n    keyCode: 110,\n    keyTrigger: 'decimal',\n    gridArea: 'decimal'\n  },\n  {\n    keyCode: 13,\n    keyTrigger: 'equals',\n    gridArea: 'equals'\n  }\n]\nconsole.log('Project complete for now');\nconsole.log('Nice to add - keyboard integration, better styling, hitting empty equals returns undefined - should fix')\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}