{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","props","state","smallDisplay","mainDisplay","handleKeyPress","bind","clearMainDisplay","clearDisplays","inputZero","inputNumber","inputOperator","inputDecimal","equals","document","addEventListener","this","removeEventListener","event","console","log","keyCode","String","fromCharCode","setState","answer","test","numberValue","getElementById","target","id","value","slice","operatorValue","operators","includes","eval","fluid","style","gridArea","onClick","React","Component","calculatorKeys","keyTrigger","ReactDOM","render"],"mappings":"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","file":"static/js/main.efde22fd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\n//react-bootstrap\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //State\n    this.state = {\n      smallDisplay: '',\n      mainDisplay: '0'\n    }\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.clearMainDisplay = this.clearMainDisplay.bind(this);\n    this.clearDisplays = this.clearDisplays.bind(this);\n    this.inputZero = this.inputZero.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n    this.inputOperator = this.inputOperator.bind(this);\n    this.inputDecimal = this.inputDecimal.bind(this);\n    this.equals = this.equals.bind(this);\n  }\n  \n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  \n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n  \n  handleKeyPress(event) {\n    console.log(event.keyCode);\n    console.log(String.fromCharCode(event.keyCode));\n  }\n  \n  //Clear main display \n  clearMainDisplay(){\n    this.setState({\n      mainDisplay: ''\n    })  \n  }\n  \n  //Clears both displays\n  clearDisplays() {\n    this.setState({\n      smallDisplay: '',\n      mainDisplay: '0',\n      answer: ''\n    })\n  }\n  \n  //Function to input zeros\n  inputZero() {\n    let zeroStartRegex = /^[0]/;\n    let zeroDecimalStartRegex = /^(0.)/;\n    //If mainDisplay already starts with zero, and does not start with '0.', input zero\n    if (zeroStartRegex.test(this.state.mainDisplay) && !zeroDecimalStartRegex.test(this.state.mainDisplay)) {\n      return;\n    } else {\n      switch(this.state.mainDisplay) {\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          this.clearMainDisplay();\n          this.setState({\n            smallDisplay: this.state.smallDisplay + this.state.mainDisplay + '0',\n            mainDisplay: '0'\n          });\n          break;\n        default:\n           this.setState({\n            smallDisplay: this.state.smallDisplay + '0',\n            mainDisplay: this.state.mainDisplay + '0'\n          });\n          break;\n        }\n      }\n    }\n  \n  //Function to input numbers\n  inputNumber(event) {\n    let numberValue = document.getElementById(event.target.id).value;\n    //If mainDisplay is showing 0 or operator, clear it and then continue inputting numbers\n    switch(this.state.mainDisplay) {\n      case '0':\n        this.clearMainDisplay();\n        this.setState({\n          mainDisplay: numberValue,\n          smallDisplay: this.state.smallDisplay.slice(0, -1) + numberValue\n        })\n        break;\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n        this.clearMainDisplay();\n        this.setState({\n          mainDisplay: numberValue,\n          smallDisplay: this.state.smallDisplay + this.state.mainDisplay + numberValue\n        });\n        break;\n      default:\n        this.setState({\n          mainDisplay: this.state.mainDisplay + numberValue,\n          smallDisplay: this.state.smallDisplay + numberValue\n        })\n        break;\n      }\n    }\n  \n  //Method to input decimals\n  inputDecimal() {\n    let decimalRegex = /[.]/g;\n    //If mainDisplay does not already have a decimal, input one\n    if (!decimalRegex.test(this.state.mainDisplay)) {\n      switch(this.state.mainDisplay) {\n        //If mainDisplay is only zero, add '.'\n        case '0':\n          this.setState({\n            mainDisplay: this.state.mainDisplay + '.',\n            smallDisplay: this.state.smallDisplay.slice(0, -1) + '0' + '.'\n          });\n          break;\n        //If mainDisplay is showing operator, add '0.' to start decimal\n        case '':\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          this.clearMainDisplay();\n          this.setState({\n            smallDisplay: this.state.smallDisplay + this.state.mainDisplay + '0.',\n            mainDisplay: '0.'\n          })\n          break;\n        default:\n          console.log(this.state.mainDisplay);\n          this.setState({\n            smallDisplay: this.state.smallDisplay + '.',\n            mainDisplay: this.state.mainDisplay + '.'\n          });\n          break;\n        }\n      }\n    }\n  \n  //Method to input operators, allows to change operator until a number is inputted next\n  /*\n  inputOperator() {\n    let operatorValue = document.getElementById(event.srcElement.id).value;\n    this.clearMainDisplay();\n    if (!operators.includes(this.state.mainDisplay)) {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    } else {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    }\n  };\n  */\n  \n  inputOperator(event) {\n    let operatorValue = document.getElementById(event.target.id).value;\n    this.clearMainDisplay();\n    \n    if (this.state.answer != '' && this.state.smallDisplay == '') {\n      this.setState({\n        smallDisplay: this.state.answer + operatorValue\n      })      \n    } else if (!operators.includes(this.state.mainDisplay)) {\n      \n      this.setState({\n        mainDisplay: operatorValue\n      })\n    } else {\n      this.setState({\n        mainDisplay: operatorValue\n      })\n    }\n  };\n  \n  //Method to solve equation when 'equals' is pressed \n  /*\n  equals(numbersArray, operatorsArray) {\n    function operate(operator) {\n      switch(firstNum = 0, secondNum = 0, operator) {\n        case '+':\n          return firstNum + secondNum;\n          break;\n        case '-':\n          return firstNum - secondNum;\n          break;\n      }\n    }\n    return;\n  }\n  */\n  \n  equals() {\n    let answer = eval(this.state.smallDisplay);    \n    this.setState({\n      smallDisplay: '',\n      mainDisplay: answer,\n      answer: answer\n    });\n  }\n  \n  render() {\n    return(\n      <Container fluid>\n        <Col>\n        <Container id='calculator'>\n          <input id='small-display' style={{gridArea: 'small-display'}} value={this.state.smallDisplay}/>\n          <input id='main-display' style={{gridArea: 'display'}} value={this.state.mainDisplay} />\n          <button id='clear' style={{gridArea: 'clear'}} onClick={this.clearDisplays}>AC</button>\n          <button id='divide' style={{gridArea: 'divide'}} onClick={this.inputOperator} value='/'>/</button>\n          <button id='multiply' style={{gridArea: 'multiply'}} onClick={this.inputOperator} value='*'>X</button>\n          <button id='seven' style={{gridArea: 'seven'}} onClick={this.inputNumber} value='7'>7</button>\n          <button id='eight' style={{gridArea: 'eight'}} onClick={this.inputNumber} value='8'>8</button>\n          <button id='nine' style={{gridArea: 'nine'}} onClick={this.inputNumber} value='9'>9</button>\n          <button id='minus' style={{gridArea: 'minus'}} onClick={this.inputOperator} value='-'>-</button>\n          <button id='four' style={{gridArea: 'four'}} onClick={this.inputNumber} value='4'>4</button>\n          <button id='five' style={{gridArea: 'five'}} onClick={this.inputNumber} value='5'>5</button>\n          <button id='six' style={{gridArea: 'six'}} onClick={this.inputNumber} value='6'>6</button>\n          <button id='plus' style={{gridArea: 'plus'}} onClick={this.inputOperator} value='+'>+</button>\n          <button id='one' style={{gridArea: 'one'}} onClick={this.inputNumber} value='1'>1</button>\n          <button id='two' style={{gridArea: 'two'}} onClick={this.inputNumber} value='2'>2</button>\n          <button id='three' style={{gridArea: 'three'}} onClick={this.inputNumber} value='3'>3</button>\n          <button id='zero' style={{gridArea: 'zero'}} onClick={this.inputZero} value='0'>0</button>\n          <button id='decimal' style={{gridArea: 'decimal'}} onClick={this.inputDecimal} value='.'>.</button>\n          <button id='equals' style={{gridArea: 'equals'}} onClick={this.equals}>=</button>\n        </Container>\n        </Col>\n      </Container>\n    )\n  }\n}\n\nconst operators = [\n  '+', '-', '*', '/'\n]\n\nconst calculatorKeys = [\n  {\n    keyCode: 12,\n    keyTrigger: 'clear',\n    gridArea: 'clear'\n  },\n  {\n    keyCode: 111,\n    keyTrigger: 'divide',\n    gridArea: 'divide'\n  },\n  {\n    keyCode: 106,\n    keyTrigger: 'multiply',\n    gridArea: 'multiply'\n  },\n  {\n    keyCode: 55,\n    keyTrigger: 'seven',\n    gridArea: 'seven'\n  },\n  {\n    keyCode: 56,\n    keyTrigger: 'eight',\n    gridArea: 'eight'\n  },\n  {\n    keyCode: 57,\n    keyTrigger: 'nine',\n    gridArea: 'nine'\n  },\n  {\n    keyCode: 109,\n    keyTrigger: 'minus',\n    gridArea: 'multiply'\n  },\n  {\n    keyCode: 52,\n    keyTrigger: 'four',\n    gridArea: 'four'\n  },\n  {\n    keyCode: 53,\n    keyTrigger: 'five',\n    gridArea: 'five'\n  },\n  {\n    keyCode: 54,\n    keyTrigger: 'six',\n    gridArea: 'six'\n  },\n  {\n    keyCode: 107,\n    keyTrigger: 'plus',\n    gridArea: 'plus'\n  },\n  {\n    keyCode: 49,\n    keyTrigger: 'one',\n    gridArea: 'one'\n  },\n  {\n    keyCode: 50,\n    keyTrigger: 'two',\n    gridArea: 'two'\n  },\n  {\n    keyCode: 51,\n    keyTrigger: 'three',\n    gridArea: 'three'\n  },\n  {\n    keyCode: 48,\n    keyTrigger: 'zero',\n    gridArea: 'zero',\n  },\n  {\n    keyCode: 110,\n    keyTrigger: 'decimal',\n    gridArea: 'decimal'\n  },\n  {\n    keyCode: 13,\n    keyTrigger: 'equals',\n    gridArea: 'equals'\n  }\n]\nconsole.log('Project complete for now');\nconsole.log('Nice to add - keyboard integration, better styling, hitting empty equals returns undefined - should fix')\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}